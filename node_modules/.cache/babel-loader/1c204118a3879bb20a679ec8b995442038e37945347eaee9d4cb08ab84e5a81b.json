{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/sofiaetchegoin/Documents/devacademy/bootcamp/welcome/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/sofiaetchegoin/Documents/devacademy/bootcamp/welcome/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"/Users/sofiaetchegoin/Documents/devacademy/bootcamp/welcome/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nvar _client, _onlineManager, _queryFlavor, _version, _isMounted, _styleNonce, _buttonPosition, _position, _initialIsOpen, _errorTypes, _Component, _dispose;\nimport { createSignal, render, lazy, setupStyleSheet, createComponent, mergeProps } from './chunk/CQKFH7YS.js';\n\n// src/index.tsx\nvar TanstackQueryDevtools = (_client = /*#__PURE__*/new WeakMap(), _onlineManager = /*#__PURE__*/new WeakMap(), _queryFlavor = /*#__PURE__*/new WeakMap(), _version = /*#__PURE__*/new WeakMap(), _isMounted = /*#__PURE__*/new WeakMap(), _styleNonce = /*#__PURE__*/new WeakMap(), _buttonPosition = /*#__PURE__*/new WeakMap(), _position = /*#__PURE__*/new WeakMap(), _initialIsOpen = /*#__PURE__*/new WeakMap(), _errorTypes = /*#__PURE__*/new WeakMap(), _Component = /*#__PURE__*/new WeakMap(), _dispose = /*#__PURE__*/new WeakMap(), class TanstackQueryDevtools {\n  constructor(config) {\n    _classPrivateFieldInitSpec(this, _client, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onlineManager, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _queryFlavor, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _version, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _isMounted, {\n      writable: true,\n      value: false\n    });\n    _classPrivateFieldInitSpec(this, _styleNonce, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _buttonPosition, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _position, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _initialIsOpen, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _errorTypes, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _Component, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _dispose, {\n      writable: true,\n      value: void 0\n    });\n    const {\n      client,\n      queryFlavor,\n      version,\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce\n    } = config;\n    _classPrivateFieldSet(this, _client, createSignal(client));\n    _classPrivateFieldSet(this, _queryFlavor, queryFlavor);\n    _classPrivateFieldSet(this, _version, version);\n    _classPrivateFieldSet(this, _onlineManager, onlineManager);\n    _classPrivateFieldSet(this, _styleNonce, styleNonce);\n    _classPrivateFieldSet(this, _buttonPosition, createSignal(buttonPosition));\n    _classPrivateFieldSet(this, _position, createSignal(position));\n    _classPrivateFieldSet(this, _initialIsOpen, createSignal(initialIsOpen));\n    _classPrivateFieldSet(this, _errorTypes, createSignal(errorTypes));\n  }\n  setButtonPosition(position) {\n    _classPrivateFieldGet(this, _buttonPosition)[1](position);\n  }\n  setPosition(position) {\n    _classPrivateFieldGet(this, _position)[1](position);\n  }\n  setInitialIsOpen(isOpen) {\n    _classPrivateFieldGet(this, _initialIsOpen)[1](isOpen);\n  }\n  setErrorTypes(errorTypes) {\n    _classPrivateFieldGet(this, _errorTypes)[1](errorTypes);\n  }\n  setClient(client) {\n    _classPrivateFieldGet(this, _client)[1](client);\n  }\n  mount(el) {\n    if (_classPrivateFieldGet(this, _isMounted)) {\n      throw new Error(\"Devtools is already mounted\");\n    }\n    const dispose = render(() => {\n      const [btnPosition] = _classPrivateFieldGet(this, _buttonPosition);\n      const [pos] = _classPrivateFieldGet(this, _position);\n      const [isOpen] = _classPrivateFieldGet(this, _initialIsOpen);\n      const [errors] = _classPrivateFieldGet(this, _errorTypes);\n      const [queryClient] = _classPrivateFieldGet(this, _client);\n      let Devtools;\n      if (_classPrivateFieldGet(this, _Component)) {\n        Devtools = _classPrivateFieldGet(this, _Component);\n      } else {\n        Devtools = lazy(() => import('./Devtools/2NWMMIDL.js'));\n        _classPrivateFieldSet(this, _Component, Devtools);\n      }\n      setupStyleSheet(_classPrivateFieldGet(this, _styleNonce));\n      const _self$ = this;\n      return createComponent(Devtools, mergeProps({\n        get queryFlavor() {\n          return _classPrivateFieldGet(_self$, _queryFlavor);\n        },\n        get version() {\n          return _classPrivateFieldGet(_self$, _version);\n        },\n        get onlineManager() {\n          return _classPrivateFieldGet(_self$, _onlineManager);\n        }\n      }, {\n        get client() {\n          return queryClient();\n        },\n        get buttonPosition() {\n          return btnPosition();\n        },\n        get position() {\n          return pos();\n        },\n        get initialIsOpen() {\n          return isOpen();\n        },\n        get errorTypes() {\n          return errors();\n        }\n      }));\n    }, el);\n    _classPrivateFieldSet(this, _isMounted, true);\n    _classPrivateFieldSet(this, _dispose, dispose);\n  }\n  unmount() {\n    var _classPrivateFieldGet2;\n    if (!_classPrivateFieldGet(this, _isMounted)) {\n      throw new Error(\"Devtools is not mounted\");\n    }\n    (_classPrivateFieldGet2 = _classPrivateFieldGet(this, _dispose)) === null || _classPrivateFieldGet2 === void 0 || _classPrivateFieldGet2.call(this);\n    _classPrivateFieldSet(this, _isMounted, false);\n  }\n});\nexport { TanstackQueryDevtools };","map":{"version":3,"names":["createSignal","render","lazy","setupStyleSheet","createComponent","mergeProps","TanstackQueryDevtools","_client","WeakMap","_onlineManager","_queryFlavor","_version","_isMounted","_styleNonce","_buttonPosition","_position","_initialIsOpen","_errorTypes","_Component","_dispose","constructor","config","_classPrivateFieldInitSpec","writable","value","client","queryFlavor","version","onlineManager","buttonPosition","position","initialIsOpen","errorTypes","styleNonce","_classPrivateFieldSet","setButtonPosition","_classPrivateFieldGet","setPosition","setInitialIsOpen","isOpen","setErrorTypes","setClient","mount","el","Error","dispose","btnPosition","pos","errors","queryClient","Devtools","_self$","unmount","_classPrivateFieldGet2","call"],"sources":["/Users/sofiaetchegoin/Documents/devacademy/bootcamp/welcome/node_modules/@tanstack/query-devtools/build/index.js"],"sourcesContent":["import { createSignal, render, lazy, setupStyleSheet, createComponent, mergeProps } from './chunk/CQKFH7YS.js';\n\n// src/index.tsx\nvar TanstackQueryDevtools = class {\n  #client;\n  #onlineManager;\n  #queryFlavor;\n  #version;\n  #isMounted = false;\n  #styleNonce;\n  #buttonPosition;\n  #position;\n  #initialIsOpen;\n  #errorTypes;\n  #Component;\n  #dispose;\n  constructor(config) {\n    const {\n      client,\n      queryFlavor,\n      version,\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce\n    } = config;\n    this.#client = createSignal(client);\n    this.#queryFlavor = queryFlavor;\n    this.#version = version;\n    this.#onlineManager = onlineManager;\n    this.#styleNonce = styleNonce;\n    this.#buttonPosition = createSignal(buttonPosition);\n    this.#position = createSignal(position);\n    this.#initialIsOpen = createSignal(initialIsOpen);\n    this.#errorTypes = createSignal(errorTypes);\n  }\n  setButtonPosition(position) {\n    this.#buttonPosition[1](position);\n  }\n  setPosition(position) {\n    this.#position[1](position);\n  }\n  setInitialIsOpen(isOpen) {\n    this.#initialIsOpen[1](isOpen);\n  }\n  setErrorTypes(errorTypes) {\n    this.#errorTypes[1](errorTypes);\n  }\n  setClient(client) {\n    this.#client[1](client);\n  }\n  mount(el) {\n    if (this.#isMounted) {\n      throw new Error(\"Devtools is already mounted\");\n    }\n    const dispose = render(() => {\n      const [btnPosition] = this.#buttonPosition;\n      const [pos] = this.#position;\n      const [isOpen] = this.#initialIsOpen;\n      const [errors] = this.#errorTypes;\n      const [queryClient] = this.#client;\n      let Devtools;\n      if (this.#Component) {\n        Devtools = this.#Component;\n      } else {\n        Devtools = lazy(() => import('./Devtools/2NWMMIDL.js'));\n        this.#Component = Devtools;\n      }\n      setupStyleSheet(this.#styleNonce);\n      const _self$ = this;\n      return createComponent(Devtools, mergeProps({\n        get queryFlavor() {\n          return _self$.#queryFlavor;\n        },\n        get version() {\n          return _self$.#version;\n        },\n        get onlineManager() {\n          return _self$.#onlineManager;\n        }\n      }, {\n        get client() {\n          return queryClient();\n        },\n        get buttonPosition() {\n          return btnPosition();\n        },\n        get position() {\n          return pos();\n        },\n        get initialIsOpen() {\n          return isOpen();\n        },\n        get errorTypes() {\n          return errors();\n        }\n      }));\n    }, el);\n    this.#isMounted = true;\n    this.#dispose = dispose;\n  }\n  unmount() {\n    if (!this.#isMounted) {\n      throw new Error(\"Devtools is not mounted\");\n    }\n    this.#dispose?.();\n    this.#isMounted = false;\n  }\n};\n\nexport { TanstackQueryDevtools };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}